'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsonStableStringify = require('json-stable-stringify');

var _jsonStableStringify2 = _interopRequireDefault(_jsonStableStringify);

var _index = require('../../utils/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Webhook Service
 * @param {Object} args
 * @param {String} args.type
 * @param {Object} args.body
 * @param {Object} webhook
 * @param {Function} onData
 * @param {Function} onError
 * @param {Function} onClose
 */
function searchStreamToURLApi(args, webhook) {
  for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    rest[_key - 2] = arguments[_key];
  }

  var _this = this;

  var parsedArgs = (0, _index.removeUndefined)(args);
  var bodyCopy = parsedArgs.body;
  var type = void 0;
  var typeString = void 0;
  // Validate arguments
  var valid = (0, _index.validate)(parsedArgs, {
    body: 'object'
  });
  if (valid !== true) {
    throw valid;
  }

  if (parsedArgs.type === undefined || !(typeof parsedArgs.type === 'string' || Array.isArray(parsedArgs.type)) || parsedArgs.type === '' || parsedArgs.type.length === 0) {
    throw new Error('fields missing: type');
  }

  valid = (0, _index.validate)(parsedArgs.body, {
    query: 'object'
  });
  if (valid !== true) {
    throw valid;
  }

  if (Array.isArray(parsedArgs.type)) {
    type = parsedArgs.type;

    typeString = parsedArgs.type.join();
  } else {
    type = [parsedArgs.type];
    typeString = parsedArgs.type;
  }

  var webhooks = [];
  var _bodyCopy = bodyCopy,
      query = _bodyCopy.query;


  if (typeof webhook === 'string') {
    var webHookObj = {};
    webHookObj.url = webhook;
    webHookObj.method = 'GET';
    webhooks.push(webHookObj);
  } else if (webhook.constructor === Array) {
    webhooks = webhook;
  } else if (webhook === Object(webhook)) {
    webhooks.push(webhook);
  } else {
    throw new Error('fields missing: second argument(webhook) is necessary');
  }

  var populateBody = function populateBody() {
    bodyCopy = {};
    bodyCopy.webhooks = webhooks;
    bodyCopy.query = query;
    bodyCopy.type = type;
  };

  populateBody();

  var encode64 = (0, _index.btoa)((0, _jsonStableStringify2.default)(query));
  var path = '.percolator/webhooks-0-' + typeString + '-0-' + encode64;

  this.change = function () {
    webhooks = [];

    if (typeof parsedArgs === 'string') {
      var webhook2 = {};
      webhook2.url = parsedArgs;
      webhook2.method = 'POST';
      webhooks.push(webhook2);
    } else if (parsedArgs.constructor === Array) {
      webhooks = parsedArgs;
    } else if (parsedArgs === Object(parsedArgs)) {
      webhooks.push(parsedArgs);
    } else {
      throw new Error('fields missing: one of webhook or url fields is required');
    }

    populateBody();

    return _this.performRequest('POST');
  };
  this.stop = function () {
    bodyCopy = undefined;
    return _this.performRequest('DELETE');
  };
  this.performRequest = function (method) {
    var res = _this.performWsRequest.apply(_this, [{
      method: method,
      path: path,
      body: bodyCopy
    }].concat(rest));

    res.change = _this.change;
    res.stop = _this.stop;

    return res;
  };
  return this.performRequest('POST');
}
exports.default = searchStreamToURLApi;
'use strict';

var pTry = require('p-try');

module.exports = function (concurrency) {
	if (concurrency < 1) {
		throw new TypeError('Expected `concurrency` to be a number from 1 and up');
	}

	var queue = [];
	var activeCount = 0;

	var next = function next() {
		activeCount--;

		if (queue.length > 0) {
			queue.shift()();
		}
	};

	return function (fn) {
		return new Promise(function (resolve, reject) {
			var run = function run() {
				activeCount++;

				pTry(fn).then(function (val) {
					resolve(val);
					next();
				}, function (err) {
					reject(err);
					next();
				});
			};

			if (activeCount < concurrency) {
				run();
			} else {
				queue.push(run);
			}
		});
	};
};
'use strict';

var _gulp = require('gulp');

var _gulp2 = _interopRequireDefault(_gulp);

var _gulpMocha = require('gulp-mocha');

var _gulpMocha2 = _interopRequireDefault(_gulpMocha);

var _gulpEslint = require('gulp-eslint');

var _gulpEslint2 = _interopRequireDefault(_gulpEslint);

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _gulpGit = require('gulp-git');

var _gulpGit2 = _interopRequireDefault(_gulpGit);

var _gulpBump = require('gulp-bump');

var _gulpBump2 = _interopRequireDefault(_gulpBump);

var _gulpFilter = require('gulp-filter');

var _gulpFilter2 = _interopRequireDefault(_gulpFilter);

var _gulpTagVersion = require('gulp-tag-version');

var _gulpTagVersion2 = _interopRequireDefault(_gulpTagVersion);

require('babel-register');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SOURCE = ['*.js']; // Copyright (C) 2014 Yusuke Suzuki <utatane.tea@gmail.com>
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//   * Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//   * Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

var ESLINT_OPTION = {
    parser: 'babel-eslint',
    parserOptions: {
        'sourceType': 'module'
    },
    rules: {
        'quotes': 0,
        'eqeqeq': 0,
        'no-use-before-define': 0,
        'no-shadow': 0,
        'no-new': 0,
        'no-underscore-dangle': 0,
        'no-multi-spaces': 0,
        'no-native-reassign': 0,
        'no-loop-func': 0
    },
    env: {
        'node': true
    }
};

_gulp2.default.task('test', function () {
    var options = (0, _minimist2.default)(process.argv.slice(2), {
        string: 'test',
        default: {
            test: 'test/*.js'
        }
    });
    return _gulp2.default.src(options.test).pipe((0, _gulpMocha2.default)({ reporter: 'spec' }));
});

_gulp2.default.task('lint', function () {
    return _gulp2.default.src(SOURCE).pipe((0, _gulpEslint2.default)(ESLINT_OPTION)).pipe(_gulpEslint2.default.formatEach('stylish', process.stderr)).pipe(_gulpEslint2.default.failOnError());
});

var inc = function inc(importance) {
    return _gulp2.default.src(['./package.json']).pipe((0, _gulpBump2.default)({ type: importance })).pipe(_gulp2.default.dest('./')).pipe(_gulpGit2.default.commit('Bumps package version')).pipe((0, _gulpFilter2.default)('package.json')).pipe((0, _gulpTagVersion2.default)({
        prefix: ''
    }));
};

_gulp2.default.task('travis', ['lint', 'test']);
_gulp2.default.task('default', ['travis']);

_gulp2.default.task('patch', [], function () {
    return inc('patch');
});
_gulp2.default.task('minor', [], function () {
    return inc('minor');
});
_gulp2.default.task('major', [], function () {
    return inc('major');
});
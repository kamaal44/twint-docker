'use strict';

var _http = require('http');

var _vm = require('vm');

var _assert = require('assert');

(0, _http.get)('foo.json', function (res) {
  console.log('status', res.statusCode);
  var data = '';
  res.on('data', function (d) {
    data += d.toString();
  }).on('error', function (e) {
    console.log('error', e);
  }).on('end', function () {
    console.log(data);
    if (global.document) {
      afterMain();
    } else {
      afterWorker();
    }
  });
});
function afterMain() {
  var context = (0, _vm.createContext)();

  (0, _vm.runInContext)('var x = 1', context);
  (0, _assert.deepEqual)(context, { x: 1 });

  (0, _vm.runInContext)('var y = 2;', context);
  var x = (0, _vm.runInContext)('++x', context);
  (0, _assert.equal)(x, 2);
  (0, _assert.equal)(context.x, 2);
  (0, _assert.equal)(context.x, context.y);
  console.log('ok main');
}
function afterWorker() {
  var context = (0, _vm.createContext)({ x: 0 });

  (0, _vm.runInContext)('x++', context);
  (0, _assert.deepEqual)(context, { x: 1 });

  var x = (0, _vm.runInContext)('++x', context);
  (0, _assert.equal)(x, 2);
  (0, _assert.equal)(context.x, 2);
  console.log('ok worker');
}
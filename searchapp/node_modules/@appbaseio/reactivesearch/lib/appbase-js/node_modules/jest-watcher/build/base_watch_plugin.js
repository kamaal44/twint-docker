'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, '__esModule', {
  value: true
});

var BaseWatchPlugin = function () {
  function BaseWatchPlugin(_ref) {
    _classCallCheck(this, BaseWatchPlugin);

    var stdin = _ref.stdin,
        stdout = _ref.stdout;

    this._stdin = stdin;
    this._stdout = stdout;
  }

  _createClass(BaseWatchPlugin, [{
    key: 'apply',
    value: function apply(hooks) {}
  }, {
    key: 'getUsageInfo',
    value: function getUsageInfo(globalConfig) {
      return null;
    }
  }, {
    key: 'onKey',
    value: function onKey(value) {}
  }, {
    key: 'run',
    value: function run(globalConfig, updateConfigAndRun) {
      return Promise.resolve();
    }
  }]);

  return BaseWatchPlugin;
}();
/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */


exports.default = BaseWatchPlugin;
"use strict";

var definitions = require("../../lib/definitions");

function addIsHelper(type) {
  return "export function is" + type + "(node: Object, opts?: Object): boolean {\n    return is(\"" + type + "\", node, opts) }\n  ";
}

module.exports = function generateValidators() {
  var output = "// @flow\n/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../is\";\n\n";

  Object.keys(definitions.VISITOR_KEYS).forEach(function (type) {
    output += addIsHelper(type);
  });

  Object.keys(definitions.FLIPPED_ALIAS_KEYS).forEach(function (type) {
    output += addIsHelper(type);
  });

  Object.keys(definitions.DEPRECATED_KEYS).forEach(function (type) {
    var newType = definitions.DEPRECATED_KEYS[type];
    output += "export function is" + type + "(node: Object, opts: Object): boolean {\n  console.trace(\"The node type " + type + " has been renamed to " + newType + "\");\n  return is(\"" + type + "\", node, opts);\n}\n";
  });

  return output;
};
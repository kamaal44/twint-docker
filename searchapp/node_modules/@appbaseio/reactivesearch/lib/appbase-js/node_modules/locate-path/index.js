'use strict';

var path = require('path');
var pathExists = require('path-exists');
var pLocate = require('p-locate');

module.exports = function (iterable, opts) {
	opts = Object.assign({
		cwd: process.cwd()
	}, opts);

	return pLocate(iterable, function (el) {
		return pathExists(path.resolve(opts.cwd, el));
	}, opts);
};

module.exports.sync = function (iterable, opts) {
	opts = Object.assign({
		cwd: process.cwd()
	}, opts);

	var _iteratorNormalCompletion = true;
	var _didIteratorError = false;
	var _iteratorError = undefined;

	try {
		for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
			var el = _step.value;

			if (pathExists.sync(path.resolve(opts.cwd, el))) {
				return el;
			}
		}
	} catch (err) {
		_didIteratorError = true;
		_iteratorError = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion && _iterator.return) {
				_iterator.return();
			}
		} finally {
			if (_didIteratorError) {
				throw _iteratorError;
			}
		}
	}
};